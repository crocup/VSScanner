import requests
import vulners


class VulnerSearch(object):

    def __init__(self, cpe, product=None):
        """

        :param cpe:
        :param product:
        """
        self.cpe = cpe
        self.product = product

    def search_circl(self):
        """

        :return:
        """
        URL = "http://cve.circl.lu/api/cvefor/" + self.cpe
        r = requests.get(url=URL)
        data = r.json()
        result_data = list()
        if len(data) > 0:
            for ids in data:
                result_data.append(ids['id'])
            # print(result_data)
        return result_data

    def search_vulners(self, api_key, version, product_version):
        """

        :return:
        """
        vulners_api = vulners.Vulners(api_key=api_key)
        if len(version) > 0:
            cpe_results = vulners_api.cpeVulnerabilities(self.cpe)
            cpe_exploit_list = cpe_results.get('exploit')
            cpe_vulnerabilities_list = [cpe_results.get(key) for key in cpe_results if
                                        key not in ['info', 'blog', 'bugbounty']]
        else:
            cpe_vulnerabilities_list = vulners_api.searchExploit(product_version, limit=25)
        return cpe_vulnerabilities_list
